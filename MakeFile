# --- 1. Configuration ---
# Define the compiler and the flags needed for compiling.
# We do not need linker flags (LDFLAGS) or libraries (LIBS) yet.
CXX := g++
CXXFLAGS := -g -std=c++17 -Wall -Isrc

# --- Linker Configuration ---
# Linker flags (for linking .o to .exe)
LDFLAGS := -mwindows -municode
# Libraries needed for Win32 API
LIBS := -luser32 -lgdi32 -lkernel32 -lcomctl32 -lws2_32 -lpsapi
# The name of our final program
EXECUTABLE := bin/WindowLocator.exe

# --- 2. Automatic File Detection ---
# This automatically finds all .cpp files in the 'src' directory.
SOURCES := $(wildcard src/*.cpp)
# This automatically creates the list of .o files to be built in the 'obj/' directory.
OBJECTS := $(SOURCES:src/%.cpp=obj/%.o)

# --- 3. Build Rules ---

# The default target. Running 'mingw32-make' will try to build this 'all' target.
# This target depends on all the individual object files.
all: $(EXECUTABLE)
	$(info All object files have been successfully linked into the executable.)
	$(info You can find it in the 'bin' directory.)	

# Rule to link the final executable
# The command to create the 'bin' directory has been removed.
$(EXECUTABLE): $(OBJECTS)
	$(info Linking executable: $(EXECUTABLE)...)
	$(CXX) $(LDFLAGS) $^ -o $@ $(LIBS)
	$(info Build finished successfully: $(EXECUTABLE))

# This is the pattern rule that tells 'make' how to build one object file from a source file.
# It says: "To make a file like 'obj/somefile.o', you need 'src/somefile.cpp'".
# The directory creation command has been removed as requested.
obj/%.o: src/%.cpp
	$(info Compiling $<...)
	$(CXX) $(CXXFLAGS) -c $< -o $@

# This 'clean' target will remove the 'obj' directory and all its contents
# using a Windows-native command.
clean:
	$(info Cleaning all object files...)
	-@cmd /c "if exist obj\\*.o del /q obj\\*.o"
	$(info Clean complete.)

# Declares that 'all' and 'clean' are special targets, not files.
.PHONY: all clean